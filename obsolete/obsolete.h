//#include "prefix.h"
//
//Дальность (м), Д - Distance (m) - Distance
//Прицел (дел), П_д - Aim (div) - Aim_div
//Прицел (тыс), П_т - Aim (mil) - Aim_mil
//Узкая вилка (тыс), В - Narrow Fork (mil) - V
//Изменение дальности при изменении прицела на 1 тыс (м), ΔX_тыс - Distance Change for 1 mil of Aim Change (m) - Delta_X_mil
//Срединное отклонение по дальности (м), В_д - Distance Median Deviation (m) - Dev_Dist
//Срединное отклонение по высоте (м), В_в - Height Median Deviation (m) - Dev_H
//Срединное отклонение боковое (м), В_б - Lateral Median Deviation (m) - Dev_Lat
//Поправка направления на деривацию (тыс) Z - Direction Correction for Derivation - Dir_Corr_Deriv
//Поправка направления на боковой ветер скоростью 10 м/с (тыс) ΔZ_W - Direction Correction for 10 m/s Lateral Wind (mil) - Dir_Corr_Lat_Wind
//Поправка дальности на продольный ветер скоростью 10 м/с (м)  ΔX_W - Distance Correction for 10 m/s Longitudinal Wind (m) - Dir_Corr_Long_Wind
//Поправка дальности на изменение давления воздуха на 10 мм (м), ΔX_H - Distance Correction for 10 mm Pressure Change (m) - Dist_Corr_P
//Поправка дальности на изменение температуры воздуха на 10° (м), ΔX_T - Distance Correction for 10C Air Temperature Change (m) - Dist_Corr_Air_T
//Поправка дальности на изменение температуры заряда на 10° (м), ΔX_Tз - Distance Correction for 10C Load Temperature Change (m) - Dist_Corr_Proj_T
//Поправка дальности на изменение начальной скорости 1% (м), ΔX_v0 - Distance Correction for 1% Initial Velocity Change (m) - Dist_Corr_V
//Поправка дальности на изменение массы снаряда на 1 знак (м), ΔX_q - Distance Correction for 1 Sign Projectile Mass Change - Dist_Corr_M
//Угол прицеливания (градусы, минуты), α - Aiming Angle (deg min) - Aim_deg
//Угол падения (градусы), θ_c - Impact Angle (deg) - Imp_deg
//Окончательная скорость (м/с), v_c - Impact Velocity (mps) - Imp_V
//Время полета (с), t_с - Flight Time (sec) - Time
//Высота входа в "Метеосредний" (м), Y_бюлл - Input Height for Meteorological Bulletin (m) - Meteo_H
//Высота траектории (м), Y_s - Trajectory Height (m) - Traj_H
//
//
//std::unordered_map<int, std::vector<double>> map_full = {
//        {600,   {12,  1,   1,  92,  18,  0.1, 0.1, 0,  1,  1,   0,   1,   9,   12,  2,   0.08,  0.4, 644, 0.9, 0,    1}},
//        {800,   {16,  4,   1,  89,  18,  0.2, 0.2, 0,  1,  1,   1,   1,   12,  15,  3,   0.21,  0.6, 629, 1.2, 0,    1.8}},
//        {1000,  {20,  6,   1,  86,  17,  0.2, 0.2, 0,  1,  2,   1,   2,   15,  19,  3,   0.35,  0.7, 614, 1.5, 0,    2.9}},
//        {1200,  {24,  8,   1,  83,  17,  0.2, 0.2, 0,  1,  2,   2,   3,   18,  22,  4,   0.50,  0.9, 599, 1.8, 0,    4.3}},
//        {1400,  {28,  11,  1,  80,  17,  0.3, 0.3, 0,  1,  3,   2,   4,   21,  26,  4,   0.65,  1.1, 585, 2.1, 0,    6.1}},
//        {1600,  {32,  13,  1,  77,  16,  0.3, 0.4, 0,  1,  4,   3,   5,   23,  29,  4,   0.80,  1.3, 571, 2.5, 0,    8.3}},
//        {1800,  {36,  16,  1,  74,  16,  0.4, 0.5, 0,  2,  5,   3,   6,   26,  32,  5,   0.95,  1.5, 557, 2.9, 0,    11}},
//        {2000,  {40,  18,  1,  71,  15,  0.4, 0.6, 0,  2,  6,   4,   8,   28,  35,  5,   1.10,  1.7, 543, 3.3, 0,    14}},
//        {2200,  {44,  21,  1,  69,  15,  0.5, 0.7, 0,  2,  7,   5,   10,  30,  38,  5,   1.26,  1.9, 530, 3.6, 0,    18}},
//        {2400,  {48,  24,  1,  67,  15,  0.5, 0.8, 0,  2,  8,   5,   11,  33,  41,  6,   1.45,  2.1, 517, 4,   0,    22}},
//        {2600,  {52,  27,  1,  65,  15,  0.6, 0.9, 0,  2,  10,  6,   13,  35,  44,  6,   1.61,  2.4, 504, 4.4, 0,    26}},
//        {2800,  {56,  30,  1,  63,  15,  0.6, 1.1, 1,  2,  12,  8,   15,  38,  47,  6,   1.80,  2.6, 491, 4.8, 0,    30}},
//        {3000,  {60,  33,  1,  61,  14,  0.7, 1.3, 1,  3,  14,  9,   17,  40,  50,  6,   2.00,  2.9, 478, 5.2, 100,  35}},
//        {3200,  {64,  37,  1,  59,  14,  0.7, 1.5, 1,  3,  16,  10,  19,  42,  53,  6,   2.20,  3.2, 466, 5.6, 100,  41}},
//        {3400,  {68,  40,  1,  57,  14,  0.8, 1.7, 1,  3,  18,  11,  21,  44,  56,  6,   2.40,  3.6, 454, 6,   100,  48}},
//        {3600,  {72,  44,  1,  55,  13,  0.9, 1.9, 1,  4,  20,  12,  24,  46,  58,  6,   2.61,  3.9, 442, 6.5, 100,  55}},
//        {3800,  {76,  47,  1,  53,  13,  1,   2.1, 1,  4,  23,  13,  27,  48,  60,  6,   2.83,  4.3, 430, 7,   100,  62}},
//        {4000,  {80,  51,  1,  51,  13,  1.1, 2.4, 1,  4,  26,  15,  30,  50,  62,  5,   3.06,  4.7, 419, 7.5, 100,  70}},
//        {4200,  {84,  55,  1,  49,  13,  1.1, 2.6, 1,  4,  29,  16,  33,  52,  65,  5,   3.30,  5.1, 408, 8,   100,  79}},
//        {4400,  {88,  59,  1,  47,  12,  1.2, 2.8, 1,  5,  32,  18,  36,  54,  67,  5,   3.55,  5.6, 398, 8.5, 100,  89}},
//        {4600,  {92,  64,  1,  45,  12,  1.2, 3,   1,  5,  35,  19,  39,  55,  69,  5,   3.81,  6.1, 388, 9,   100,  100}},
//        {4800,  {96,  68,  1,  43,  12,  1.3, 3.2, 1,  5,  38,  21,  42,  57,  71,  4,   4.08,  6.6, 378, 9.5, 200,  112}},
//        {5000,  {100, 73,  1,  41,  11,  1.4, 3.4, 1,  5,  42,  23,  46,  58,  73,  4,   4.36,  7.1, 368, 10,  200,  126}},
//        {5200,  {104, 77,  1,  39,  11,  1.5, 3.6, 2,  6,  46,  24,  50,  60,  75,  4,   4.65,  7.7, 359, 11,  200,  141}},
//        {5400,  {108, 82,  1,  38,  11,  1.6, 3.7, 2,  6,  50,  26,  54,  62,  77,  3,   4.95,  8.3, 351, 11,  200,  157}},
//        {5600,  {112, 88,  1,  36,  11,  1.8, 3.8, 2,  6,  54,  27,  58,  63,  79,  3,   5.26,  8.9, 344, 12,  200,  174}},
//        {5800,  {116, 93,  1,  35,  12,  2,   3.9, 2,  6,  59,  29,  62,  65,  81,  2,   5.60,  9.6, 338, 12,  300,  192}},
//        {6000,  {120, 99,  2,  34,  12,  2.1, 4,   2,  7,  64,  31,  66,  66,  83,  2,   5.93,  10,  332, 13,  300,  211}},
//        {6200,  {124, 105, 2,  33,  12,  2.3, 4.1, 2,  7,  69,  32,  70,  68,  85,  2,   6.28,  11,  327, 14,  300,  231}},
//        {6400,  {128, 111, 2,  32,  13,  2.6, 4.2, 2,  7,  74,  34,  74,  69,  87,  1,   6.65,  12,  323, 14,  400,  253}},
//        {6600,  {132, 117, 2,  31,  13,  2.9, 4.3, 2,  7,  79,  35,  78,  70,  88,  1,   7.03,  12,  319, 15,  400,  277}},
//        {6800,  {136, 124, 2,  30,  13,  3.1, 4.3, 3,  8,  85,  37,  83,  71,  89,  0,   7.41,  13,  315, 15,  500,  304}},
//        {7000,  {140, 130, 2,  30,  14,  3.5, 4.4, 3,  8,  91,  39,  88,  72,  90,  -1,  7.81,  14,  311, 16,  500,  333}},
//        {7200,  {144, 137, 2,  29,  14,  3.7, 4.4, 3,  8,  97,  40,  93,  73,  92,  -1,  8.21,  15,  308, 17,  500,  363}},
//        {7400,  {148, 144, 2,  28,  14,  4,   4.5, 4,  9,  103, 42,  98,  74,  93,  -2,  8.65,  16,  305, 18,  600,  395}},
//        {7600,  {152, 151, 2,  27,  14,  4.3, 4.5, 4,  9,  109, 43,  103, 75,  94,  -2,  9.08,  16,  302, 18,  600,  428}},
//        {7800,  {156, 159, 2,  26,  14,  4.6, 4.6, 4,  9,  116, 45,  108, 76,  95,  -3,  9.53,  17,  299, 19,  700,  462}},
//        {8000,  {160, 167, 2,  26,  15,  4.9, 4.6, 4,  9,  123, 47,  113, 77,  96,  -4,  10.00, 18,  297, 20,  700,  498}},
//        {8200,  {164, 174, 3,  25,  15,  5.3, 4.6, 4,  10, 130, 48,  118, 78,  97,  -4,  10.46, 19,  295, 20,  800,  536}},
//        {8400,  {168, 182, 3,  24,  15,  5.7, 4.7, 5,  10, 137, 50,  123, 78,  98,  -5,  10.95, 20,  293, 21,  800,  577}},
//        {8600,  {172, 191, 3,  23,  16,  6.1, 4.7, 5,  10, 144, 51,  128, 79,  99,  -5,  11.45, 21,  291, 22,  900,  620}},
//        {8800,  {176, 199, 3,  23,  16,  6.5, 4.8, 5,  10, 151, 53,  133, 80,  100, -6,  11.96, 22,  289, 23,  1000, 665}},
//        {9000,  {180, 208, 3,  22,  17,  6.9, 4.8, 5,  10, 159, 55,  139, 81,  101, -7,  12.48, 22,  288, 23,  1000, 713}},
//        {9200,  {184, 217, 3,  22,  17,  7.3, 4.9, 6,  10, 166, 56,  144, 82,  102, -7,  13.01, 23,  287, 24,  1100, 763}},
//        {9400,  {188, 226, 3,  21,  17,  7.7, 4.9, 6,  10, 174, 58,  149, 82,  103, -8,  13.56, 24,  286, 25,  1200, 815}},
//        {9600,  {192, 235, 3,  21,  17,  8.2, 5,   6,  11, 182, 59,  154, 83,  104, -8,  14.11, 25,  285, 26,  1200, 869}},
//        {9800,  {196, 245, 4,  20,  18,  8.7, 5,   6,  11, 190, 61,  159, 84,  105, -9,  14.68, 26,  284, 26,  1300, 926}},
//        {10000, {200, 254, 4,  20,  18,  9.2, 5.1, 7,  12, 198, 62,  164, 85,  106, -9,  15.26, 27,  283, 27,  1400, 985}},
//        {10200, {204, 264, 4,  20,  18,  8.6, 5.1, 7,  12, 207, 63,  169, 86,  107, -10, 15.86, 28,  282, 28,  1500, 1050}},
//        {10400, {208, 274, 4,  19,  18,  10,  5.2, 7,  12, 215, 65,  174, 81,  108, -10, 16.46, 29,  282, 29,  1600, 1110}},
//        {10600, {212, 285, 4,  19,  18,  10,  5.3, 8,  12, 224, 66,  179, 87,  109, -11, 17.08, 30,  281, 30,  1700, 1180}},
//        {10800, {216, 295, 4,  18,  19,  11,  5.4, 8,  13, 232, 68,  184, 88,  110, -11, 17.73, 31,  281, 31,  1800, 1250}},
//        {11000, {220, 306, 5,  18,  19,  12,  5.5, 8,  13, 241, 69,  489, 89,  111, -12, 18.38, 32,  281, 32,  1900, 1320}},
//        {11200, {224, 317, 5,  18,  198, 13,  5.6, 8,  13, 250, 70,  194, 90,  112, -12, 19.05, 33,  281, 32,  2000, 1400}},
//        {11400, {228, 329, 5,  17,  19,  13,  5.7, 9,  13, 259, 82,  199, 90,  113, -13, 19.73, 34,  281, 33,  2100, 1480}},
//        {11600, {232, 341, 5,  17,  19,  14,  5.8, 9,  14, 268, 73,  204, 91,  114, -13, 20.45, 35,  281, 34,  2200, 1560}},
//        {11800, {236, 353, 5,  17,  20,  15,  5.9, 9,  14, 277, 75,  209, 91,  114, -14, 21.18, 36,  282, 35,  2300, 1650}},
//        {12000, {240, 365, 6,  16,  20,  15,  6,   10, 14, 286, 77,  215, 92,  115, -14, 21.93, 37,  282, 36,  2400, 1740}},
//        {12200, {244, 378, 6,  16,  20,  16,  6.1, 10, 15, 295, 79,  220, 93,  116, -15, 22.70, 38,  282, 37,  2600, 1830}},
//        {12400, {248, 391, 6,  15,  20,  17,  6.3, 10, 15, 304, 81,  225, 94,  117, -16, 23.48, 39,  283, 38,  2700, 1930}},
//        {12600, {252, 405, 6,  15,  21,  18,  6.5, 11, 15, 314, 83,  230, 95,  118, -17, 24.30, 40,  284, 39,  2900, 2040}},
//        {12800, {256, 419, 7,  14,  21,  19,  6.7, 11, 15, 324, 85,  235, 96,  119, -18, 25.15, 21,  285, 40,  3000, 2150}},
//        {13000, {260, 434, 7,  14,  22,  20,  6.8, 11, 15, 334, 87,  240, 97,  121, -18, 26.01, 42,  286, 41,  3100, 2270}},
//        {13200, {264, 449, 8,  13,  22,  21,  7,   12, 16, 344, 89,  245, 98,  122, -19, 26.91, 43,  287, 43,  3300, 2400}},
//        {13400, {268, 464, 9,  12,  22,  22,  7.2, 12, 16, 354, 91,  250, 99,  124, -20, 27.86, 44,  288, 44,  3400, 2530}},
//        {13600, {272, 481, 9,  11,  23,  23,  7.4, 13, 16, 365, 93,  255, 100, 125, -21, 28.86, 45,  298, 45,  3600, 2670}},
//        {13800, {276, 499, 10, 11,  23,  24,  7.6, 13, 16, 376, 95,  259, 102, 127, -21, 29.91, 46,  290, 46,  3800, 2820}},
//        {14000, {280, 517, 11, 10,  24,  26,  7.9, 14, 16, 387, 97,  263, 103, 129, -22, 31.01, 47,  291, 47,  4000, 2980}},
//        {14200, {284, 537, 12, 9.3, 24,  28,  8.2, 15, 16, 398, 99,  267, 104, 130, 23,  32.20, 48,  293, 48,  4200, 3150}},
//        {14400, {288, 558, 14, 8.4, 25,  30,  8.6, 15, 17, 410, 101, 271, 106, 132, 23,  33.48, 50,  295, 50,  4500, 3340}},
//        {14600, {292, 582, 16, 7.3, 25,  32,  9,   16, 17, 422, 103, 275, 107, 134, -24, 34.90, 51,  298, 52,  4700, 3560}},
//        {14800, {296, 609, 20, 6,   26,  35,  9.4, 17, 17, 434, 106, 279, 109, 136, -25, 36.51, 53,  301, 54,  5000, 3810}},
//        {15000, {300, 641, 28, 4.4, 26,  38,  9.7, 19, 17, 447, 109, 282, 110, 138, -26, 38.48, 54,  304, 56,  5300, 4120}},
//        {15200, {304, 686, 0,  0,   27,  43,  10,  20, 18, 464, 112, 283, 112, 140, -27, 41.18, 57,  307, 59,  5700, 4560}},
//        {15300, {306, 750, 0,  0,   28,  48,  11,  23, 20, 483, 116, 283, 115, 144, -28, 45.00, 60,  311, 63,  6200, 5180}}
//};
//std::unordered_map<int, std::vector<double>> map_full_mortar = {
//        {15200, {304, 802,  29, 4.6, 28, 53, 11, 26,  21, 494, 118, 278, 115, 144, -29, 48.13, 62, 314, 66, 6600, 5690}},
//        {15000, {300, 845,  19, 6.9, 28, 57, 12, 29,  22, 500, 118, 272, 114, 143, -29, 50.71, 64, 316, 69, 6900, 6100}},
//        {14800, {296, 874,  15, 8.5, 28, 60, 12, 32,  22, 502, 117, 267, 113, 142, -29, 52.45, 65, 318, 70, 7100, 6390}},
//        {14600, {292, 898,  13, 10,  27, 63, 12, 34,  23, 503, 116, 262, 112, 140, -29, 53.86, 66, 319, 71, 7300, 6610}},
//        {14400, {288, 918,  12, 11,  27, 65, 12, 37,  23, 504, 115, 257, 111, 139, -29, 55.06, 67, 320, 72, 7400, 6790}},
//        {14200, {284, 935,  11, 12,  27, 67, 12, 39,  24, 503, 114, 253, 110, 137, -29, 56.13, 68, 320, 73, 7500, 6940}},
//        {14000, {280, 952,  10, 13,  27, 69, 12, 41,  25, 502, 113, 249, 109, 136, -28, 57.10, 69, 320, 75, 7600, 7070}},
//        {13800, {276, 966,  10, 13,  27, 71, 12, 44,  25, 502, 112, 245, 107, 134, -28, 57.98, 69, 321, 76, 7600, 7190}},
//        {13600, {272, 980,  9,  14,  27, 72, 12, 46,  26, 501, 110, 241, 106, 133, -28, 58.81, 70, 321, 77, 7700, 7300}},
//        {13400, {268, 993,  8,  15,  26, 73, 12, 46,  26, 501, 109, 237, 105, 131, -27, 59.60, 70, 321, 77, 7700, 7410}},
//        {13200, {264, 1006, 8,  16,  26, 75, 12, 50,  27, 501, 107, 234, 104, 130, -27, 60.35, 71, 321, 78, 7800, 7510}},
//        {13000, {260, 1018, 7,  17,  26, 77, 12, 52,  28, 500, 106, 230, 103, 128, -27, 61.05, 71, 322, 78, 7800, 7600}},
//        {12800, {256, 1029, 7,  18,  26, 79, 12, 54,  29, 499, 105, 226, 102, 127, -26, 61.71, 72, 322, 78, 7800, 7680}},
//        {12600, {252, 1039, 7,  18,  25, 80, 12, 56,  29, 498, 103, 222, 100, 125, -26, 62.35, 72, 322, 78, 7900, 7760}},
//        {12400, {248, 1049, 6,  19,  25, 81, 12, 58,  30, 497, 102, 219, 98,  123, -26, 62.96, 72, 322, 79, 7900, 7830}},
//        {12200, {244, 1059, 6,  20,  25, 81, 11, 60,  30, 496, 100, 215, 97,  121, -25, 63.56, 73, 322, 79, 8000, 7900}},
//        {12000, {240, 1069, 6,  20,  24, 82, 11, 62,  31, 495, 99,  212, 95,  119, -25, 64.15, 73, 323, 79, 8000, 7960}},
//        {11800, {236, 1079, 5,  21,  24, 82, 11, 65,  31, 494, 98,  208, 94,  117, -25, 64.70, 74, 323, 80, 8000, 8020}},
//        {11600, {232, 1088, 5,  21,  24, 83, 11, 67,  32, 493, 96,  205, 92,  115, -25, 65.26, 74, 323, 80, 8100, 8070}},
//        {11400, {228, 1097, 5,  22,  23, 83, 11, 70,  33, 491, 95,  202, 90,  113, -24, 65.80, 74, 323, 80, 8100, 8120}},
//        {11200, {224, 1105, 5,  22,  23, 84, 11, 73,  33, 489, 93,  198, 89,  111, -24, 66.31, 75, 323, 80, 8200, 8170}},
//        {11000, {220, 1114, 5,  23,  23, 84, 11, 76,  34, 488, 92,  194, 87,  109, -24, 66.83, 75, 323, 81, 8200, 8220}},
//        {10800, {216, 1123, 5,  23,  22, 85, 11, 79,  35, 486, 90,  191, 86,  107, -23, 67.35, 75, 323, 81, 8300, 8270}},
//        {10600, {212, 1131, 4,  24,  22, 85, 10, 82,  63, 484, 89,  187, 84,  105, -23, 67.85, 76, 323, 81, 8300, 8310}},
//        {10400, {208, 1139, 4,  24,  21, 86, 10, 85,  37, 482, 87,  184, 82,  102, -22, 68.35, 76, 323, 81, 8400, 8350}},
//        {10200, {204, 1147, 4,  25,  21, 86, 10, 89,  37, 481, 86,  180, 80,  99,  -22, 68.83, 76, 323, 81, 8400, 8390}},
//        {10000, {200, 1155, 4,  26,  20, 87, 10, 94,  38, 480, 84,  177, 78,  97,  22,  69.31, 77, 322, 82, 8400, 8430}},
//        {9800,  {196, 1163, 4,  27,  20, 87, 10, 100, 39, 479, 83,  174, 76,  95,  22,  69.80, 77, 322, 82, 855,  8460}},
//        {9700,  {194, 1167, 0,  0,   20, 87, 10, 103, 39, 478, 82,  172, 75,  94,  22,  70.00, 77, 322, 82, 8500, 8480}}
//};
//
//std::unordered_map<int, std::vector<double>> map_reduced = {
//        {400,   {0,     0,   1,  62,  12, 0.1, 0.1, 0,  0,  0,   0,  0,   4,  8,   2,   -0.01, 0.4, 535, 0,   0.7,  0}},
//        {600, {12, 3, 1, 59, 12, 0.2, 0.2, 0, 1, 1, 0, 1, 6, 12, 3, 0.18, 0.6, 521, 1.1, 0,                         1.5}},
//        {800,   {16,    6,   1,  57,  12, 0.2, 0.2, 0,  1,  1,   1,  1,   8,  15,  3,   0.38,  0.8, 507, 1.5, 0,    2.7}},
//        {1000,  {20,    10,  1,  55,  11, 0.3, 0.2, 0,  1,  2,   1,  2,   9,  19,  4,   0.58,  1.1, 493, 1.9, 0,    4.4}},
//        {1200,  {24,    13,  1,  53,  11, 0.3, 0.3, 0,  1,  3,   2,  3,   11, 22,  5,   0.30,  1.3, 479, 2.3, 0,    6.5}},
//        {1400,  {28,    17,  1,  51,  10, 0.4, 0.4, 0,  2,  5,   2,  4,   13, 25,  5,   1.01,  16,  465, 2.7, 0,    9}},
//        {1600,  {32,    21,  1,  49,  10, 0.4, 0.5, 1,  2,  6,   3,  5,   14, 28,  6,   1.25,  1.9, 452, 3.1, 0,    12}},
//        {1800,  {36,    25,  1,  47,  10, 0.5, 0.6, 1,  2,  8,   4,  7,   16, 31,  6,   1.50,  2.2, 439, 3.6, 0,    16}},
//        {2000,  {40,    29,  1,  45,  10, 0.5, 0.8, 1,  3,  10,  5,  9,   17, 34,  6,   1.75,  2.6, 427, 4.1, 0,    20}},
//        {2200,  {44,    34,  1,  43,  11, 0.6, 0.9, 1,  3,  12,  6,  11,  19, 37,  6,   2.01,  2.9, 415, 4.5, 0,    25}},
//        {2400,  {48,    38,  1,  42,  11, 0.7, 1.1, 1,  3,  14,  7,  13,  20, 40,  7,   2.28,  3.3, 403, 5,   0,    31}},
//        {2600,  {52,    43,  1,  40,  11, 0.8, 1.3, 1,  3,  16,  8,  15,  22, 43,  7,   2.53,  3.8, 392, 5.5, 0,    38}},
//        {2800,  {56,    48,  1,  39,  11, 0.9, 1.5, 1,  4,  18,  9,  18,  23, 46,  7,   2.86,  4.2, 381, 6,   100,  46}},
//        {3000,  {60,    53,  1,  37,  11, 0.9, 1.7, 1,  4,  21,  10, 21,  24, 48,  7,   3.16,  4.7, 371, 6.5, 100,  54}},
//        {3200,  {64,    58,  1,  36,  11, 1,   1.9, 1,  4,  24,  11, 24,  25, 50,  7,   3.48,  5.2, 362, 7.1, 100,  63}},
//        {3400,  {68,    64,  1,  34,  12, 1.1, 2.2, 1,  5,  28,  12, 27,  26, 52,  7,   3.81,  5.8, 353, 7.7, 100,  73}},
//        {3600,  {72,    69,  1,  33,  12, 1.2, 2.4, 2,  5,  32,  13, 30,  27, 54,  7,   4.16,  6.4, 345, 8.3, 100,  85}},
//        {3800,  {76,    75,  2,  32,  12, 1.4, 2.6, 2,  5,  36,  14, 33,  28, 56,  7,   4.53,  7,   337, 8.9, 100,  98}},
//        {4000,  {80,    82,  2,  31,  12, 1.6, 2.8, 2,  6,  40,  16, 37,  29, 58,  7,   4.91,  7.6, 330, 9.5, 200,  112}},
//        {4200,  {84,    88,  2,  30,  13, 1.8, 2.9, 2,  6,  45,  17, 41,  30, 60,  7,   5.30,  8.3, 324, 10,  200,  128}},
//        {4400,  {88,    95,  2,  29,  13, 2,   3,   2,  6,  50,  18, 45,  31, 62,  7,   5.70,  9,   319, 11,  200,  145}},
//        {4600,  {92,    102, 2,  28,  13, 2.2, 3.1, 2,  7,  55,  19, 49,  32, 64,  7,   6.11,  9.7, 314, 11,  200,  163}},
//        {4800,  {96,    109, 2,  27,  13, 2.4, 3.2, 2,  7,  61,  21, 53,  33, 66,  6,   6.55,  10,  310, 12,  300,  182}},
//        {5000,  {100,   117, 2,  27,  14, 2.7, 3.3, 3,  7,  67,  22, 58,  34, 67,  6,   7.00,  11,  307, 13,  300,  203}},
//        {5200,  {104,   124, 2,  26,  14, 3,   3.3, 3,  8,  73,  23, 62,  34, 69,  6,   7.45,  12,  304, 13,  300,  225}},
//        {5400,  {108,   132, 2,  26,  15, 3.3, 3.4, 3,  8,  79,  25, 67,  35, 70,  5,   7.91,  13,  301, 14,  300,  249}},
//        {5600,  {112,   140, 2,  25,  15, 3.5, 3.4, 3,  8,  85,  26, 71,  36, 72,  5,   8.38,  13,  298, 15,  400,  275}},
//        {5800,  {116,   148, 2,  24,  15, 3.8, 3.5, 3,  8,  92,  28, 76,  36, 73,  4,   8.86,  14,  295, 15,  400,  302}},
//        {6000,  {120,   156, 3,  23,  16, 4.2, 3.5, 4,  9,  99,  29, 81,  37, 74,  4,   9.36,  15,  293, 16,  400,  330}},
//        {6200,  {124,   165, 3,  22,  16, 4.5, 3.6, 4,  9,  106, 30, 85,  38, 76,  4,   9.88,  16,  291, 17,  500,  360}},
//        {6400,  {128,   174, 3,  22,  16, 4.8, 3.7, 4,  9,  113, 31, 90,  38, 77,  4,   10.41, 17,  289, 18,  500,  393}},
//        {6600,  {132,   183, 3,  22,  17, 5.1, 3.7, 4,  9,  120, 33, 95,  39, 78,  3,   10.95, 18,  287, 18,  600,  428}},
//        {6800,  {136,   192, 3,  21,  17, 5.4, 3.7, 5,  9,  127, 34, 100, 40, 79,  3,   11.50, 18,  285, 19,  600,  465}},
//        {7000,  {140,   201, 3,  21,  17, 5.8, 3.8, 5,  10, 134, 35, 105, 40, 80,  3,   12.06, 19,  283, 20,  700,  504}},
//        {7200,  {144,   211, 4,  20,  17, 6.3, 3.8, 5,  10, 141, 36, 110, 41, 82,  3,   12.65, 20,  281, 20,  800,  545}},
//        {7400,  {148,   221, 4,  20,  18, 6.8, 3.9, 5,  10, 149, 38, 115, 41, 83,  2,   13.25, 21,  280, 21,  800,  588}},
//        {7600,  {152,   231, 4,  19,  18, 7.4, 3.9, 6,  10, 157, 39, 120, 42, 84,  2,   13.85, 22,  279, 22,  900,  633}},
//        {7800,  {156,   241, 4,  19,  18, 8,   4,   6,  10, 165, 40, 125, 42, 85,  2,   14.46, 23,  278, 23,  900,  681}},
//        {8000,  {160,   252, 4,  18,  19, 8.5, 4.1, 6,  11, 173, 41, 130, 43, 86,  1,   15.10, 24,  277, 24,  1000, 731}},
//        {8200,  {164,   263, 4,  18,  19, 9,   4.1, 7,  11, 181, 43, 135, 44, 87,  1,   15.75, 25,  276, 24,  1100, 784}},
//        {8400,  {168,   274, 4,  18,  20, 9.6, 4.2, 7,  11, 189, 44, 140, 44, 88,  0,   16.41, 26,  275, 25,  1100, 839}},
//        {8600,  {172,   285, 5,  18,  20, 10,  4.3, 7,  11, 197, 45, 145, 45, 89,  0,   17.08, 27,  274, 26,  1200, 897}},
//        {8800,  {176,   296, 5,  17,  20, 11,  4.4, 7,  12, 205, 47, 150, 45, 90,  0,   17.76, 28,  273, 27,  1300, 957}},
//        {9000,  {180,   308, 5,  17,  21, 12,  4.5, 7,  12, 214, 48, 155, 46, 91,  -1,  18.46, 29,  273, 28,  1400, 1020}},
//        {9200,  {184,   320, 5,  16,  21, 13,  4.6, 7,  12, 222, 49, 160, 46, 92,  -1,  19.18, 30,  273, 29,  1400, 1080}},
//        {9400,  {188,   332, 6,  16,  21, 13,  4.7, 7,  12, 231, 51, 166, 47, 93,  -2,  19.93, 31,  273, 30,  1500, 1150}},
//        {9600,  {192,   345, 6,  15,  21, 14,  2.8, 7,  12, 240, 52, 171, 47, 94,  -2,  20.70, 32,  273, 31,  1600, 1220}},
//        {9800,  {196,   358, 6,  15,  22, 14,  4.9, 8,  12, 249, 53, 177, 48, 95,  -2,  21.48, 33,  273, 32,  1700, 1300}},
//        {10000, {200,   372, 7,  14,  22, 15,  5.1, 8,  13, 258, 54, 182, 48, 96,  -3,  22.30, 34,  273, 33,  1800, 1380}},
//        {10200, {204,   386, 7,  14,  22, 15,  5.3, 8,  13, 267, 56, 187, 49, 97,  -3,  23.13, 35,  273, 34,  2000, 1470}},
//        {10400, {208,   400, 7,  13,  23, 16,  5.4, 9,  13, 276, 57, 192, 49, 98,  -4,  24.00, 36,  273, 35,  2100, 1560}},
//        {10600, {212,   415, 7,  13,  23, 17,  5.6, 9,  13, 285, 58, 197, 50, 99,  -4,  24.90, 37,  273, 36,  2200, 1660}},
//        {10800, {216,   431, 8,  12,  24, 18,  5.7, 9,  14, 295, 60, 202, 50, 100, -5,  25.85, 38,  273, 37,  2300, 1760}},
//        {11000, {220,   447, 8,  12,  24, 19,  5.9, 10, 14, 305, 61, 207, 51, 101, -5,  26.83, 39,  274, 38,  2500, 1860}},
//        {11200, {224,   464, 9,  11,  24, 20,  6.1, 10, 14, 315, 63, 212, 51, 102, -6,  27.86, 41,  275, 39,  2600, 1970}},
//        {11400, {228,   483, 10, 10,  25, 22,  6.4, 11, 14, 325, 64, 217, 52, 103, -6,  28.96, 42,  276, 40,  2800, 2090}},
//        {11600, {232,   502, 11, 9.6, 25, 24,  6.7, 11, 15, 335, 66, 221, 52, 105, -6,  30.13, 43,  277, 42,  2900, 2230}},
//        {11800, {236,   523, 12, 8.9, 25, 25,  7,   12, 15, 345, 68, 225, 53, 106, -7,  31.35, 45,  278, 43,  3100, 2380}},
//        {12000, {240,   546, 14, 9,   26, 27,  7.3, 13, 15, 356, 70, 229, 54, 108, -7,  32.73, 46,  280, 44,  3300, 2550}},
//        {12200, {244,   570, 16, 6.9, 26, 29,  7.6, 14, 16, 367, 72, 234, 55, 110, -8,  34.21, 48,  283, 46,  3500, 2740}},
//        {12400, {248,   599, 21, 5.5, 27, 32,  8.1, 15, 16, 378, 75, 238, 56, 111, -9,  35.95, 49,  286, 48,  3700, 2960}},
//        {12600, {252,   635, 35, 3.4, 28, 35,  8.7, 16, 16, 390, 77, 241, 56, 113, -10, 38.11, 51,  290, 51,  4000, 3230}},
//        {12800, {256,   695, 0,  0,   28, 40,  9.5, 18, 17, 406, 80, 244, 57, 115, -11, 41.68, 55,  294, 54,  4400, 3700}},
//};
//
//std::unordered_map<int, std::vector<double>> map_reduced_mortar = {
//        {12800, {256, 781,  35, 3.5, 29, 48, 10,  22, 19, 422, 82, 242, 58, 116, -12, 46.85, 59, 301, 59, 5100, 4380}},
//        {12600, {252, 837,  21, 6,   29, 54, 10,  25, 20, 424, 82, 237, 57, 115, -12, 50.25, 62, 305, 62, 5400, 4830}},
//        {12400, {248, 871,  17, 7.4, 29, 56, 10,  28, 21, 425, 82, 233, 57, 114, -12, 52.28, 63, 307, 64, 5700, 5090}},
//        {12200, {244, 898,  15, 8.7, 28, 58, 10,  30, 22, 425, 81, 229, 56, 113, -12, 53.90, 64, 308, 65, 5900, 5290}},
//        {12000, {240, 921,  13, 9.9, 28, 60, 10,  33, 22, 424, 80, 225, 55, 111, -12, 55.25, 65, 309, 66, 6000, 5450}},
//        {11800, {236, 941,  11, 11,  28, 62, 10,  35, 23, 423, 79, 221, 55, 110, -12, 56.46, 66, 310, 67, 6100, 5590}},
//        {11600, {232, 960,  10, 12,  27, 64, 10,  37, 24, 421, 78, 217, 54, 108, -12, 57.58, 67, 311, 67, 6200, 5720}},
//        {11400, {228, 977,  9,  13,  27, 66, 10,  40, 24, 419, 77, 213, 53, 107, -11, 58.61, 68, 312, 68, 6300, 5840}},
//        {11200, {224, 993,  8,  14,  27, 68, 10,  42, 25, 417, 76, 209, 52, 105, -11, 59.56, 69, 313, 69, 6400, 5950}},
//        {11000, {220, 1007, 8,  14,  27, 69, 10,  45, 26, 415, 74, 205, 52, 103, -11, 60.45, 69, 313, 69, 6500, 6050}},
//        {10800, {216, 1021, 7,  15,  26, 70, 9.9, 47, 26, 413, 73, 201, 51, 102, -11, 61.28, 70, 314, 70, 6600, 6140}},
//        {10600, {212, 10.5, 7,  15,  26, 71, 9.8, 50, 27, 411, 72, 197, 50, 100, -11, 62.08, 70, 314, 70, 6600, 6230}},
//        {10400, {208, 1048, 7,  16,  26, 73, 9.7, 52, 28, 409, 71, 193, 49, 98,  -11, 62.86, 71, 314, 71, 6600, 6310}},
//        {10200, {204, 1060, 7,  16,  25, 75, 9.6, 54, 28, 407, 70, 189, 48, 96,  -11, 63.61, 72, 315, 71, 6600, 6380}},
//        {10000, {200, 1072, 6,  17,  25, 77, 9.6, 56, 29, 404, 69, 185, 47, 94,  -11, 64.35, 72, 315, 72, 6600, 6450}},
//        {9800,  {196, 1084, 6,  18,  24, 78, 9.5, 58, 30, 402, 67, 181, 46, 92,  -10, 65.05, 73, 315, 72, 6700, 6510}},
//        {9600,  {192, 1036, 6,  18,  24, 79, 9.3, 60, 30, 400, 66, 177, 45, 90,  -10, 65.73, 73, 315, 72, 6700, 6570}},
//        {9400,  {188, 1107, 5,  19,  24, 79, 9.1, 63, 31, 397, 65, 173, 44, 88,  -10, 66.40, 74, 316, 73, 6800, 6630}},
//        {9200,  {184, 1118, 5,  19,  23, 80, 9,   66, 32, 395, 63, 169, 43, 86,  -10, 67.05, 74, 316, 73, 6800, 6690}},
//        {9000,  {180, 1128, 5,  20,  23, 80, 8.9, 69, 33, 393, 62, 166, 42, 84,  -10, 67.66, 74, 316, 73, 6800, 6750}},
//        {8800,  {176, 1138, 5,  20,  22, 81, 8.8, 72, 34, 390, 61, 162, 41, 82,  -10, 68.26, 75, 317, 74, 6900, 6800}},
//        {8600,  {172, 1148, 5,  20,  21, 81, 8.7, 76, 34, 388, 59, 158, 40, 80,  -9,  68.86, 75, 317, 74, 6900, 6850}},
//        {8400,  {168, 1158, 5,  20,  20, 80, 8.6, 79, 35, 385, 57, 154, 39, 78,  -9,  69.46, 76, 317, 74, 7000, 6890}},
//        {8200,  {164, 1167, 0,  0,   20, 80, 8.5, 83, 36, 383, 56, 150, 38, 77,  -8,  70.00, 76, 317, 74, 7000, 6930}}
//};
//
//std::unordered_map<int, std::vector<double>> map_1st = {
//        {200,   {0,     0,     1,  49,  9.6, 0.0, 0.0, 0,  0,  0,   0,  0,   2,  4,   1,  0.00,  0.2, 479, 0.4, 0,    0.2}},
//        {400, {13.5, 4, 1, 47, 9.3, 0.1, 0.1, 0, 0, 0, 0, 0, 4, 8, 2, 0.25, 0.5, 465, 0.8, 0, 0.9}},
//        {600, {18.4, 8, 1, 45, 9.1, 0.1, 0.2, 0, 1, 1, 0, 1, 5, 11, 3,                    0.50,  0.7, 451, 1.2, 0,    2.0}},
//        {800,   {23.4,  13,    1,  43,  8.8, 0.2, 0.2, 0,  1,  2,   1,  2,   7,  15,  3,  0.76,  1.0, 438, 1.6, 0,    3.6}},
//        {1000,  {28.2,  17,    1,  41,  8.6, 0.2, 0.3, 1,  1,  3,   1,  3,   9,  18,  4,  1.03,  1.3, 425, 2.1, 0,    5.8}},
//        {1200,  {33.0,  22,    1,  39,  8.6, 0.3, 0.4, 1,  2,  4,   2,  4,   10, 21,  4,  1.31,  1.7, 413, 2.6, 0,    8.7}},
//        {1400,  {37.9,  27,    1,  38,  8.6, 0.3, 0.5, 1,  2,  5,   2,  5,   12, 24,  5,  1.61,  2.1, 401, 3.1, 0,    12}},
//        {1600,  {42.8,  32,    1,  37,  8.6, 0.4, 0.6, 1,  2,  7,   3,  7,   14, 27,  5,  1.93,  2.5, 390, 3.6, 0,    16}},
//        {1800,  {47.7,  38,    1,  35,  8.6, 0.4, 0.8, 1,  3,  9,   4,  9,   15, 30,  6,  2.26,  3.0, 379, 4.1, 0,    21}},
//        {2000,  {52.4,  43,    1,  33,  8.7, 0.5, 1.0, 1,  3,  11,  5,  11,  17, 33,  6,  2.60,  3.5, 368, 4.6, 0,    27}},
//        {2200,  {57.2,  49,    1,  32,  8.9, 0.6, 1.2, 1,  3,  14,  6,  13,  18, 36,  6,  2.95,  4.0, 357, 5.2, 0,    33}},
//        {2400,  {61.9,  55,    1,  31,  9.1, 0.7, 1.4, 1,  4,  17,  7,  16,  19, 38,  6,  3.31,  4.5, 347, 5.8, 100,  41}},
//        {2600,  {66.6,  62,    1,  30,  9.3, 0.9, 1.6, 1,  4,  20,  8,  18,  20, 41,  6,  3.70,  5.1, 339, 6.4, 100,  50}},
//        {2800,  {71.2,  68,    1,  29,  9.6, 1.0, 1.8, 1,  4,  24,  8,  21,  22, 43,  7,  4.10,  5.7, 332, 7.0, 100,  61}},
//        {3000,  {75.8,  75,    1,  28,  9.9, 1.1, 2.0, 2,  5,  28,  9,  24,  23, 46,  7,  4.51,  6.3, 326, 7.6, 100,  72}},
//        {3200,  {80.2,  82,    1,  27,  10,  1.2, 2.2, 2,  5,  33,  10, 27,  25, 49,  7,  4.93,  6.9, 231, 8.3, 100,  84}},
//        {3400,  {84.6,  89,    1,  26,  10,  1.4, 2.4, 2,  5,  38,  11, 31,  26, 51,  7,  5.36,  7.6, 316, 9.0, 100,  98}},
//        {3600,  {89.1,  97,    2,  26,  11,  1.5, 2.5, 2,  6,  44,  12, 35,  27, 53,  7,  5.81,  8.2, 311, 9.7, 200,  113}},
//        {3800,  {93.5,  105,   2,  25,  11,  1.6, 2.7, 2,  6,  50,  13, 39,  28, 55,  7,  6.28,  8.9, 306, 10,  200,  129}},
//        {4000,  {97.8,  112,   2,  24,  12,  1.8, 2.8, 2,  6,  56,  14, 43,  29, 57,  7,  6.75,  9.6, 301, 11,  200,  147}},
//        {4200,  {102.1, 120,   2,  24,  12,  2.0, 2.9, 2,  7,  62,  15, 47,  30, 58,  7,  7.23,  10,  297, 12,  200,  166}},
//        {4400,  {106.5, 129,   2,  23,  12,  2.3, 3.0, 2,  7,  68,  16, 51,  30, 59,  7,  7.73,  11,  294, 13,  300,  187}},
//        {4600,  {110.9, 138,   2,  23,  12,  2.6, 3.1, 2,  7,  75,  17, 56,  30, 60,  7,  8.25,  12,  292, 14,  300,  210}},
//        {4800,  {115.4, 147,   2,  22,  12,  2.9, 3.2, 2,  8,  82,  18, 60,  30, 61,  6,  8.80,  13,  290, 14,  300,  234}},
//        {5000,  {120.0, 156,   2,  22,  13,  3.2, 3.3, 3,  8,  89,  20, 65,  31, 62,  6,  9.36,  14,  289, 15,  400,  260}},
//        {5200,  {124.4, 165,   2,  21,  13,  3.5, 3.3, 3,  8,  96,  21, 69,  32, 63,  6,  9.93,  14,  287, 15,  400,  287}},
//        {5400,  {128.7, 175,   2,  21,  13,  3.8, 3.4, 3,  8,  103, 22, 74,  32, 64,  5,  10.50, 15,  286, 16,  400,  316}},
//        {5600,  {133.0, 185,   2,  21,  14,  4.1, 3.4, 4,  8,  110, 23, 79,  33, 65,  5,  11.08, 16,  284, 17,  500,  347}},
//        {5800,  {137.2, 194,   2,  21,  14,  4.5, 3.5, 4,  9,  117, 24, 84,  33, 66,  5,  11.66, 17,  283, 17,  500,  380}},
//        {6000,  {141.4, 204,   3,  20,  15,  4.9, 3.5, 5,  9,  125, 25, 89,  34, 67,  4,  12.26, 18,  281, 18,  600,  415}},
//        {6200,  {145.6, 215,   3,  20,  15,  5.3, 3.6, 5,  9,  132, 26, 94,  34, 68,  4,  12.88, 19,  280, 19,  600,  452}},
//        {6400,  {149.8, 225,   3,  19,  16,  5.7, 3.7, 5,  9,  140, 27, 99,  35, 69,  4,  13.51, 20,  278, 20,  700,  490}},
//        {6600,  {154.0, 236,   3,  19,  16,  6.1, 3.7, 5,  9,  148, 28, 104, 35, 70,  4,  14.15, 20,  277, 21,  700,  530}},
//        {6800,  {158.1, 247,   3,  19,  16,  6.5, 3.8, 5,  9,  156, 29, 109, 35, 71,  4,  14.80, 21,  275, 21,  800,  572}},
//        {7000,  {162.3, 258,   3,  18,  17,  6.9, 3.9, 6,  10, 164, 30, 114, 36, 73,  4,  15.46, 22,  273, 22,  800,  616}},
//        {7200,  {166.4, 269,   3,  18,  17,  7.3, 3.9, 6,  10, 172, 31, 119, 37, 74,  3,  16.15, 23,  272, 23,  900,  662}},
//        {7400,  {170.6, 281,   4,  17,  17,  7.7, 4.0, 6,  10, 180, 32, 124, 38, 76,  3,  16.85, 24,  271, 24,  900,  711}},
//        {7600,  {174.8, 293,   4,  17,  17,  8.2, 4.1, 6,  11, 188, 33, 129, 39, 77,  3,  17.56, 25,  270, 25,  1000, 763}},
//        {7800,  {179.0, 305,   4,  17,  17,  8.7, 4.2, 6,  11, 196, 34, 134, 39, 78,  3,  18.30, 26,  269, 26,  1100, 818}},
//        {8000,  {183.2, 318,   5,  16,  18,  9.2, 4.3, 7,  11, 205, 36, 139, 40, 80,  2,  19.05, 27,  269, 26,  1200, 876}},
//        {8200,  {187.5, 331,   5,  16,  18,  9.7, 4.4, 7,  11, 213, 37, 144, 41, 81,  2,  19.83, 28,  269, 27,  1200, 938}},
//        {8400,  {191.7, 344,   5,  15,  18,  10,  4.5, 7,  12, 222, 38, 149, 41, 82,  2,  20.63, 29,  268, 28,  1300, 1000}},
//        {8600,  {195.8, 358,   5,  15,  19,  11,  4.6, 8,  12, 230, 39, 154, 42, 83,  2,  21.45, 30,  267, 29,  1400, 1070}},
//        {8800,  {200.0, 372,   6,  14,  19,  12,  4.7, 8,  12, 239, 41, 159, 42, 84,  1,  22.30, 31,  267, 30,  1500, 1140}},
//        {9000,  {204.2, 386,   6,  14,  20,  13,  4.9, 9,  12, 247, 42, 164, 43, 85,  1,  23.16, 33,  267, 31,  1600, 1220}},
//        {9200,  {208.3, 401,   6,  13,  20,  14,  5.1, 9,  12, 256, 44, 169, 44, 87,  0,  24.06, 34,  267, 32,  1700, 1300}},
//        {9400,  {212.4, 417,   7,  12,  21,  15,  5.3, 10, 12, 265, 45, 174, 44, 88,  0,  25.00, 35,  267, 33,  1800, 1390}},
//        {9600,  {216.6, 433,   7,  12,  21,  16,  5.5, 10, 13, 274, 47, 179, 45, 89,  0,  25.98, 36,  267, 34,  1900, 1480}},
//        {9800,  {220.7, 450,   8,  11,  22,  17,  5.7, 11, 13, 283, 48, 184, 46, 90,  0,  27.01, 37,  268, 35,  2000, 1580}},
//        {10000, {224.9, 468,   9,  10,  23,  19,  5.9, 11, 13, 292, 50, 189, 46, 91,  -1, 28.10, 39,  269, 36,  2100, 1680}},
//        {10200, {229.0, 487,   10, 9.8, 23,  21,  6.1, 12, 13, 301, 51, 194, 47, 93,  -2, 29.25, 40,  270, 37,  2300, 1800}},
//        {10400, {233.2, 508,   11, 9.0, 24,  22,  6.4, 12, 14, 310, 53, 199, 47, 94,  -2, 30.48, 41,  271, 38,  2400, 1930}},
//        {10600, {237.3, 530,   12, 8.3, 24,  24,  6.7, 13, 14, 320, 54, 204, 48, 95,  -2, 31.81, 43,  272, 39,  2600, 2070}},
//        {10800, {241.5, 555,   14, 7.4, 25,  25,  7.0, 14, 14, 330, 56, 208, 48, 97,  -3, 33.28, 44,  273, 41,  2700, 2220}},
//        {11000, {245.7, 582,   18, 5.9, 26,  27,  7.3, 15, 15, 340, 57, 212, 49, 98,  -4, 34.91, 46,  275, 43,  2900, 2400}},
//        {11200, {250.0, 616,   25, 4.4, 26,  30,  8.0, 16, 15, 350, 59, 215, 50, 100, -4, 36.95, 48,  277, 45,  3100, 2630}},
//        {11400, {254.2, 661,   0,  0,   27,  33,  8.7, 17, 15, 360, 62, 218, 51, 102, -5, 39.66, 51,  281, 48,  3400, 2940}},
//        {11500, {256.1, 724.6, 0,  0,   28,  39,  9.3, 20, 16, 370, 63, 219, 52, 103, -6, 43.50, 55,  286, 52,  3800, 3390}},
//};
//
//std::unordered_map<int, std::vector<double>> map_1st_mortar = {
//        {11400, {253.4, 823,  25, 4.6, 28, 48, 9.8, 24, 18, 381, 64, 215, 51, 103, -6, 49.36, 60, 294, 57, 4500, 4080}},
//        {11200, {248.7, 866,  18, 6.4, 28, 50, 10,  27, 18, 379, 64, 211, 51, 102, -6, 51.96, 62, 296, 59, 4800, 4380}},
//        {11000, {244.1, 897,  15, 7.8, 27, 53, 10,  30, 19, 377, 63, 207, 50, 101, -6, 53.85, 63, 298, 61, 5000, 4590}},
//        {10800, {239.6, 923,  13, 8.9, 27, 55, 10,  32, 20, 375, 63, 203, 49, 99,  -6, 55.38, 64, 300, 62, 5100, 4760}},
//        {10600, {265.1, 945,  11, 9.8, 27, 58, 10,  34, 21, 373, 62, 199, 48, 97,  -6, 56.73, 65, 301, 63, 5200, 4900}},
//        {10400, {230.6, 966,  10, 11,  27, 60, 9.9, 36, 22, 371, 61, 196, 47, 95,  -6, 57.95, 66, 301, 64, 5300, 5020}},
//        {10200, {226.1, 984,  10, 11,  27, 62, 9.9, 38, 22, 368, 60, 192, 46, 93,  -6, 59.06, 67, 302, 65, 5400, 5140}},
//        {10000, {221.6, 1002, 9,  12,  26, 64, 9.9, 41, 22, 364, 59, 188, 45, 91,  -6, 60.10, 68, 303, 65, 5500, 5250}},
//        {9800,  {217.0, 1018, 9,  12,  25, 65, 9.8, 44, 23, 361, 58, 184, 44, 89,  -6, 61.06, 69, 304, 66, 5500, 5340}},
//        {9600,  {212.5, 1033, 8,  13,  25, 65, 9.6, 46, 23, 357, 57, 180, 43, 87,  -6, 61.98, 69, 305, 66, 5600, 5420}},
//        {9400,  {208.1, 1047, 7,  14,  24, 66, 9.4, 49, 24, 354, 56, 176, 42, 85,  -6, 62.85, 70, 306, 67, 5700, 5490}},
//        {9200,  {203.7, 1061, 7,  15,  24, 66, 9.3, 51, 25, 350, 55, 172, 42, 84,  -6, 63.68, 71, 306, 67, 5700, 5560}},
//        {9000,  {199.3, 1075, 7,  15,  23, 67, 9.2, 53, 26, 347, 53, 168, 41, 83,  -6, 64.48, 71, 307, 67, 5700, 5630}},
//        {8800,  {194.9, 1088, 6,  16,  23, 68, 9.0, 57, 27, 344, 52, 165, 40, 81,  -5, 65.25, 72, 307, 67, 5800, 5700}},
//        {8600,  {190.5, 1100, 6,  16,  22, 69, 8.9, 60, 27, 340, 51, 161, 39, 79,  -5, 65.98, 72, 308, 68, 5800, 5760}},
//        {8400,  {186.1, 1112, 5,  17,  22, 70, 8.7, 63, 28, 336, 50, 157, 38, 77,  -5, 66.70, 73, 303, 68, 5900, 5820}},
//        {8200,  {181.7, 1123, 5,  17,  21, 72, 8.5, 66, 29, 333, 49, 153, 37, 75,  -5, 67.40, 73, 308, 69, 5900, 5870}},
//        {8000,  {177.2, 1135, 5,  17,  21, 73, 8.4, 69, 29, 329, 48, 149, 37, 74,  -5, 68.08, 74, 308, 69, 6000, 5920}},
//        {7800,  {172.6, 1146, 5,  17,  20, 73, 8.2, 72, 30, 326, 46, 145, 36, 73,  -4, 68.76, 74, 309, 70, 6000, 5970}},
//        {7600,  {168.0, 1157, 5,  17,  20, 72, 8.1, 75, 31, 323, 44, 141, 35, 71,  -4, 69.43, 75, 309, 70, 6000, 6020}},
//        {7400,  {164.4, 1167, 0,  0,   19, 71, 8.0, 78, 32, 320, 43, 137, 34, 69,  -4, 70.00, 75, 309, 70, 6100, 6060}}
//};
//
//std::unordered_map<int, std::vector<double>> map_2nd = {
//        {200, {4.1, 4, 1, 36, 8.5, 0, 0, 1, 0, 0, 0, 0, 2, 4, 1, 0.23, 0.3, 407, 0.5, 0, 0.2}},
//        {400, {8.1, 10, 1, 35, 8.4, 0.1, 0.1, 1, 1, 1, 0, 1, 3, 8, 2, 0.58, 0.7, 395, 1.0, 0, 1.2}},
//        {600, {12.1, 16, 1, 33, 8.3, 0.2, 0.2, 1, 1, 2, 0, 1, 4, 11, 3, 0.93, 1.1, 383, 1.5, 0, 2.7}},
//        {800, {16.1, 22, 1, 31, 8.2, 0.2, 0.3, 1, 1, 3, 1, 2, 6, 15, 3, 1.30, 1.5, 372, 2.0, 0, 5.1}},
//        {1000, {20.2, 28, 1, 30, 8.1, 0.3, 0.4, 1, 1, 4, 1, 4, 7, 18, 4, 1.70, 2.0, 361, 2.6, 0, 8.0}},
//        {1200, {24.2, 35, 1, 29, 8.0, 0.3, 0.5, 1, 2, 8, 2, 6, 8, 21, 4, 2.10, 2.5, 351, 3.2, 0, 12}},
//        {1400, {28.3, 42, 1, 28, 8.1, 0.4, 0.6, 1, 2, 9, 2, 8, 10, 24, 5, 2.51, 3.0, 342, 3.8, 0, 17}},
//        {1600, {32.4, 49, 1, 27, 8.2, 0.5, 0.7, 1, 3, 12, 3, 10, 11, 27, 5, 2.96, 3.5, 334, 4.4, 0, 23}},
//        {1800, {36.4, 57, 1, 26, 8.3, 0.6, 0.8, 1, 3, 16, 3, 12, 12, 30, 5, 3.41, 4.1, 327, 5.0, 0, 30}},
//        {2000, {40.4, 65, 1, 25, 8.4, 0.7, 1.0, 2, 3, 20, 4, 14, 13, 32, 6, 3.98, 4.7, 320, 5.6, 100, 38}},
//        {2200, {44.5, 73, 1, 25, 8.6, 0.8, 1.2, 2, 4, 24, 4, 17, 14, 34, 6, 4.38, 5.4, 314, 6.2, 100, 47}},
//        {2400, {48.6, 81, 1, 24, 8.9, 1.0, 1.5, 2, 4, 29, 5, 20, 14, 36, 6, 4.88, 6.0, 310, 6.8, 100, 58}},
//        {2600, {52.6, 90, 2, 24, 9.2, 1.1, 1.7, 2, 4, 34, 6, 24, 15, 38, 6, 5.38, 6.7, 307, 7.4, 100, 70}},
//        {2800, {76.6, 99, 2, 23, 9.5, 1.2, 2.0, 2, 4, 40, 6, 28, 16, 40, 6, 5.90, 7.4, 304, 8.1, 100, 83}},
//        {3000, {60.6, 108, 2, 22, 9.8, 1.4, 2.2, 2, 5, 47, 7, 32, 17, 42, 7, 6.45, 8.1, 301, 8.8, 100, 97}},
//        {3200, {64.6, 117, 2, 22, 10, 1.6, 2.4, 2, 5, 54, 8, 36, 18, 44, 7, 7.00, 8.8, 298, 9.4, 200, 112}},
//        {3400, {68.6, 126, 2, 21, 10, 1.8, 2.5, 2, 5, 60, 9, 40, 18, 45, 7, 7.55, 9.5, 294, 10, 200, 129}},
//        {3600, {72.6, 135, 2, 21, 10, 2.0, 2.6, 2, 5, 67, 10, 45, 18, 46, 7, 8.13, 10, 290, 11, 200, 147}},
//        {3800, {76.7, 145, 2, 20, 10, 2.1, 2.8, 2, 5, 74, 11, 50, 19, 47, 7, 8.71, 11, 287, 12, 200, 167}},
//        {4000, {80.7, 155, 2, 20, 11, 2.3, 2.9, 3, 5, 81, 12, 55, 19, 48, 7, 9.30, 12, 285, 12, 800, 189}},
//        {4200, {84.7, 165, 2, 19, 11, 2.5, 2.9, 3, 6, 88, 12, 60, 20, 49, 7, 9.90, 13, 283, 13, 300, 212}},
//        {4400, {88.7, 175, 2, 19, 11, 2.8, 3.0, 3, 6, 96, 13, 64, 20, 50, 7, 10.53, 13, 281, 14, 300, 237}},
//        {4600, {92.7, 186, 2, 18, 12, 3.1, 3.0, 3, 7, 104, 13, 69, 20, 51, 7, 11.16, 14, 279, 14, 300, 264}},
//        {4800, {96.7, 197, 2, 18, 12, 3.4, 3.1, 3, 7, 112, 14, 73, 21, 52, 7, 11.81, 15, 278, 15, 400, 292}},
//        {5000, {100.7, 208, 2, 18, 13, 3.7, 3.2, 4, 7, 120, 15, 78, 21, 53, 6, 12.46, 16, 276, 16, 400, 322}},
//        {5200, {104.7, 219, 2, 17, 13, 4.0, 3.2, 4, 8, 128, 16, 8.3, 22, 55, 6, 13.15, 17, 274, 17, 400, 354}},
//        {5400, {108.8, 231, 2, 17, 13, 4.3, 3.3, 4, 8, 136, 17, 88, 23, 57, 6, 13.83, 18, 272, 18, 500, 388}},
//        {5600, {112.8, 242, 3, 16, 13, 4.6, 3.4, 5, 8, 143, 18, 93, 24, 59, 6, 14.55, 19, 270, 18, 500, 424}},
//        {5800, {116.9, 254, 3, 16, 13, 3.0, 3.4, 5, 8, 150, 19, 98, 24, 60, 6, 15.26, 20, 268, 19, 600, 462}},
//        {6000, {120.9, 266, 3, 15, 14, 5.4, 3.5, 6, 8, 157, 20, 103, 24, 61, 6, 15.98, 21, 266, 20, 700, 502}},
//        {6200, {124.9, 279, 3, 15, 14, 5.8, 3.6, 6, 8, 164, 21, 108, 25, 62, 6, 16.73, 22, 264, 21, 700, 544}},
//        {6400, {128.9, 291, 3, 15, 14, 6.3, 3.7, 6, 8, 172, 22, 112, 25, 63, 5, 17.48, 23, 263, 22, 800, 589}},
//        {6600, {132.9, 305, 4, 14, 15, 6.8, 3.9, 6, 9, 180, 23, 117, 26, 65, 5, 10.28, 24, 262, 22, 800, 638}},
//        {6800, {136.9, 318, 4, 14, 15, 7.3, 4.0, 6, 9, 188, 25, 121, 26, 66, 5, 19.08, 25, 262, 23, 900, 690}},
//        {7000, {140.9, 332, 4, 13, 16, 7.8, 4.1, 7, 9, 197, 26, 126, 27, 67, 4, 19.91, 26, 262, 24, 900, 745}},
//        {7200, {145.0, 346, 4, 13, 16, 8.4, 4.2, 7, 9, 206, 27, 131, 28, 69, 4, 20.78, 27, 262, 25, 1000, 804}},
//        {7400, {149.0, 361, 5, 13, 17, 9.1, 4.4, 8, 9, 214, 28, 136, 28, 70, 4, 21.66, 28, 261, 26, 1100, 866}},
//        {7600, {153.0, 376, 5, 12, 17, 9.9, 4.6, 8, 10, 222, 29, 141, 28, 71, 4, 22.58, 29, 261, 27, 1100, 932}},
//        {7800, {157.0, 392, 5, 12, 18, 11, 4.7, 8, 10, 230, 30, 146, 29, 72, 4, 23.53, 30, 260, 28, 1200, 1000}},
//        {8000, {161.0, 409, 5, 12, 19, 12, 4.9, 9, 10, 238, 31, 150, 29, 73, 4, 24.53, 32, 260, 29, 1300, 1080}},
//        {8200, {165.1, 426, 6, 11, 19, 12, 5.1, 9, 10, 246, 32, 154, 30, 75, 4, 25.56, 33, 260, 30, 1400, 1160}},
//        {8400, {169.1, 444, 6, 11, 20, 13, 5.3, 9, 10, 254, 34, 159, 30, 76, 3, 26.63, 34, 260, 32, 1500, 1240}},
//        {8600, {173.1, 463, 7, 10, 20, 14, 5.5, 10, 10, 262, 35, 163, 31, 78, 3, 27.76, 35, 260, 33, 1600, 1330}},
//        {8800, {177.2, 463, 8, 9.5, 21, 15, 5.7, 10, 10, 269, 37, 167, 32, 80, 3, 28.98, 37, 260, 34, 1700, 1430}},
//        {9000, {181.2, 504, 9, 8.8, 21, 16, 5.9, 11, 11, 277, 38, 172, 32, 81, 2, 30.26, 38, 260, 35, 1800, 1540}},
//        {9200, {185.2, 528, 10, 7.9, 22, 17, 6.2, 12, 11, 286, 39, 176, 33, 83, 2, 31.68, 40, 261, 36, 2000, 1660}},
//        {9400, {189.2, 555, 12, 6.9, 22, 19, 6.6, 13, 11, 295, 40, 180, 34, 85, 2, 33.28, 42, 262, 38, 2100, 1800}},
//        {9600, {193.3, 586, 15, 5.7, 23, 21, 7.1, 14, 12, 303, 42, 184, 35, 87, 2, 35.15, 44, 264, 40, 2200, 1960}},
//        {9800, {197.3, 624, 20, 4.2, 23, 24, 7.6, 15, 12, 311, 44, 188, 35, 88, 1, 37.45, 46, 266, 42, 2400, 2170}},
//        {10000, {201.5, 685, 0, 0, 24, 28, 8.2, 16, 13, 320, 46, 191, 36, 89, 0, 41.08, 49, 269, 44, 2700, 2440}},
//        {10100, {203.1, 766, 0, 0, 26, 38, 9.3, 21, 14, 328, 48, 192, 37, 93, 0, 46.00, 55, 274, 50, 3300, 3130}}
//};
//
//std::unordered_map<int, std::vector<double>> map_2nd_mortar = {
//        {10000, {201.5, 803,  21, 4.3, 26, 42, 9.9, 27, 15, 326, 48, 187, 37, 92, 0, 48.16, 58, 280, 53, 3700, 3470}},
//        {9800,  {197.4, 860,  15, 6.0, 26, 45, 10,  29, 16, 321, 47, 182, 36, 90, 0, 51.63, 61, 283, 55, 3900, 3740}},
//        {9600,  {193.3, 898,  13, 7.3, 25, 48, 10,  31, 17, 317, 46, 178, 36, 89, 0, 53.90, 62, 284, 56, 4100, 3940}},
//        {9400,  {189.3, 928,  11, 8.3, 25, 50, 10,  33, 17, 313, 45, 173, 35, 88, 0, 55.66, 63, 285, 57, 4300, 4090}},
//        {9200,  {185.3, 953,  10, 9.2, 25, 52, 9.9, 35, 18, 308, 44, 169, 35, 87, 0, 57.16, 65, 287, 58, 4400, 4220}},
//        {9000,  {181.2, 975,  9,  10,  24, 54, 9.8, 37, 19, 304, 44, 165, 34, 86, 0, 58.53, 66, 288, 59, 4500, 4330}},
//        {8800,  {177.2, 996,  8,  11,  24, 55, 9.7, 39, 19, 300, 43, 161, 34, 84, 0, 59.75, 67, 289, 60, 4500, 4440}},
//        {8600,  {173.2, 1014, 7,  12,  23, 56, 9.5, 41, 19, 295, 42, 157, 33, 83, 0, 60.86, 68, 290, 60, 4600, 4530}},
//        {8400,  {169.2, 1032, 7,  12,  23, 57, 9.3, 44, 20, 291, 41, 153, 32, 81, 0, 61.91, 68, 290, 61, 4700, 4610}},
//        {8200,  {165.1, 1049, 6,  13,  22, 57, 9.1, 47, 20, 287, 40, 149, 31, 79, 0, 62.91, 69, 291, 62, 4700, 4690}},
//        {8000,  {161.1, 1064, 6,  13,  21, 58, 8.9, 50, 21, 283, 39, 145, 30, 77, 0, 63.86, 70, 292, 62, 4800, 4760}},
//        {7800,  {157.1, 1079, 5,  14,  21, 58, 8.7, 53, 21, 279, 38, 141, 30, 75, 0, 64.76, 71, 292, 62, 4800, 4820}},
//        {7600,  {153.1, 1094, 5,  14,  20, 58, 8.5, 56, 22, 275, 37, 138, 29, 73, 0, 65.65, 71, 292, 63, 4900, 4880}},
//        {7400,  {149.0, 1108, 5,  15,  20, 58, 8.3, 59, 23, 272, 36, 135, 28, 70, 0, 66.50, 72, 293, 63, 4900, 4940}},
//        {7200,  {145.0, 1122, 5,  15,  19, 58, 8.0, 62, 24, 269, 35, 132, 27, 68, 0, 67.31, 72, 293, 64, 5000, 5000}},
//        {7000,  {140.9, 1135, 4,  16,  18, 59, 7.8, 66, 25, 266, 34, 129, 27, 66, 0, 68.10, 73, 293, 64, 5100, 5050}},
//        {6800,  {136.9, 1148, 4,  16,  18, 60, 7.7, 70, 26, 262, 33, 125, 26, 64, 0, 68.86, 74, 294, 64, 5100, 5100}},
//        {6600,  {132.8, 1160, 4,  16,  17, 60, 7.6, 74, 27, 259, 32, 122, 24, 61, 0, 69.61, 74, 294, 65, 5100, 5140}},
//        {6500,  {130.8, 1167, 0,  0,   17, 59, 7.5, 75, 27, 258, 32, 121, 24, 61, 0, 70.00, 74, 294, 65, 5200, 5150}}
//};
//
//std::unordered_map<int, std::vector<double>> map_3rd = {
//        {200,  {2.1,   10,  1,  23,  6.9, 0.1, 0,   0,  0,  0,   0,  0,   2,  4,   1,  0.58,  0.5, 329, 0.6, 0,    0.4}},
//        {400,  {4.8,   18,  1,  22,  6.7, 0.1, 0.1, 0,  1,  2,   0,  1,   3,  7,   2,  1.10,  1.1, 323, 1.2, 0,    1.8}},
//        {600,  {7.6,   27,  1,  22,  6.8, 0.2, 0.2, 1,  1,  5,   0,  3,   4,  10,  3,  1.63,  1.6, 318, 1.9, 0,    4.2}},
//        {800,  {10.4,  36,  1,  21,  6.9, 0.3, 0.4, 1,  1,  8,   1,  5,   5,  13,  3,  2.18,  2.2, 313, 2.5, 0,    7.6}},
//        {1000, {13.4,  46,  1,  21,  7.0, 0.3, 0.6, 1,  1,  12,  1,  7,   6,  16,  4,  2.73,  2.8, 309, 3.1, 0,    12}},
//        {1200, {16.4,  55,  1,  21,  7.2, 0.3, 0.8, 1,  2,  15,  1,  9,   8,  19,  4,  3.30,  3.4, 305, 3.7, 0,    17}},
//        {1400, {19.4,  65,  1,  20,  7.5, 0.4, 1.1, 1,  2,  18,  1,  11,  9,  22,  5,  3.88,  4.1, 302, 4.4, 0,    23}},
//        {1600, {22.4,  75,  1,  20,  7.9, 0.6, 1.4, 1,  2,  21,  2,  13,  10, 25,  6,  4.48,  4.8, 299, 5.1, 0,    31}},
//        {1800, {25.4,  85,  1,  25,  8.4, 0.8, 1.7, 1,  2,  25,  2,  15,  11, 28,  6,  5.08,  5.4, 296, 5.8, 0,    40}},
//        {2000, {28.4,  95,  2,  20,  9.0, 1.0, 1.9, 2,  2,  30,  2,  18,  12, 30,  7,  5.70,  6.1, 293, 6.5, 100,  51}},
//        {2200, {31.4,  105, 2,  20,  10,  1.2, 2.1, 2,  2,  35,  3,  21,  13, 33,  7,  6.31,  6.8, 290, 7.2, 100,  63}},
//        {2400, {34.4,  116, 2,  19,  11,  1.5, 2.2, 2,  3,  41,  3,  23,  14, 35,  8,  6.95,  7.6, 288, 7.9, 100,  76}},
//        {2600, {37.4,  126, 2,  19,  12,  1.8, 2.3, 2,  3,  46,  4,  26,  15, 37,  8,  7.58,  8.3, 286, 8.6, 100,  90}},
//        {2800, {40.5,  137, 2,  19,  13,  2.1, 2.4, 2,  3,  51,  4,  29,  16, 39,  8,  8.23,  9.1, 283, 9.3, 100,  106}},
//        {3000, {43.5,  148, 3,  18,  14,  2.4, 2.5, 3,  3,  57,  4,  32,  16, 41,  9,  8.90,  9.9, 281, 10,  100,  123}},
//        {3200, {46.6,  160, 3,  18,  15,  2.8, 2.6, 3,  4,  63,  5,  35,  17, 44,  9,  9.58,  11,  278, 11,  100,  142}},
//        {3400, {49.7,  171, 3,  17,  17,  3.3, 2.7, 3,  4,  68,  6,  38,  18, 46,  9,  10.28, 12,  276, 12,  200,  163}},
//        {3600, {52.7,  183, 4,  17,  18,  3.8, 2.8, 3,  4,  73,  6,  41,  19, 48,  10, 10.98, 12,  273, 12,  200,  186}},
//        {3800, {55.8,  195, 4,  16,  19,  4.4, 2.9, 3,  4,  79,  7,  45,  20, 50,  10, 11.70, 13,  271, 13,  200,  210}},
//        {4000, {58.8,  207, 5,  16,  20,  5.0, 3.0, 4,  4,  85,  7,  49,  21, 52,  10, 12.43, 14,  269, 14,  200,  236}},
//        {4200, {61.9,  220, 5,  15,  21,  5.7, 3.1, 4,  4,  90,  8,  53,  22, 54,  10, 13.18, 15,  267, 15,  300,  264}},
//        {4400, {65.0,  233, 6,  15,  23,  6.5, 3.3, 4,  4,  96,  8,  56,  22, 56,  11, 13.95, 16,  265, 16,  300,  294}},
//        {4600, {68.1,  246, 6,  15,  25,  7.4, 3.4, 4,  5,  102, 9,  60,  23, 58,  11, 14.75, 17,  263, 16,  300,  327}},
//        {4800, {71.3,  259, 7,  14,  26,  8.3, 3.5, 4,  5,  108, 10, 64,  24, 60,  11, 15.56, 18,  261, 17,  400,  362}},
//        {5000, {74.4,  273, 8,  14,  27,  9.3, 3.6, 5,  5,  114, 11, 68,  25, 62,  11, 16.40, 19,  260, 18,  400,  400}},
//        {5200, {77.5,  287, 8,  14,  29,  10,  3.7, 5,  5,  119, 11, 72,  26, 64,  11, 17.25, 20,  259, 19,  400,  440}},
//        {5400, {80.6,  302, 9,  13,  30,  12,  3.8, 6,  5,  125, 12, 76,  26, 66,  11, 18.13, 21,  258, 20,  500,  483}},
//        {5600, {83.7,  317, 10, 13,  32,  13,  3.9, 6,  5,  131, 13, 80,  27, 68,  11, 19.05, 22,  257, 21,  500,  529}},
//        {5800, {86.8,  333, 11, 12,  33,  14,  4.0, 6,  6,  137, 14, 84,  28, 70,  11, 19.98, 24,  256, 22,  600,  578}},
//        {6000, {89.8,  349, 12, 12,  35,  16,  4.1, 7,  6,  143, 15, 88,  29, 72,  11, 20.95, 25,  255, 23,  600,  630}},
//        {6200, {92.9,  366, 13, 11,  37,  18,  4.2, 7,  6,  149, 16, 91,  30, 74,  11, 21.96, 26,  254, 24,  700,  686}},
//        {6400, {96.1,  384, 14, 11,  39,  21,  4.4, 7,  6,  155, 16, 94,  30, 76,  12, 23.03, 27,  253, 25,  700,  747}},
//        {6600, {99.2,  402, 16, 10,  41,  23,  4.6, 8,  6,  160, 17, 96,  31, 78,  12, 24.15, 29,  252, 26,  800,  814}},
//        {6800, {102.4, 422, 18, 9.5, 43,  25,  4.8, 8,  6,  166, 18, 98,  32, 80,  12, 25.33, 30,  251, 27,  900,  888}},
//        {7000, {105.5, 443, 20, 8.9, 45,  28,  5.0, 9,  7,  172, 19, 100, 33, 83,  12, 26.60, 32,  250, 28,  1000, 970}},
//        {7200, {108.7, 466, 22, 8.2, 47,  32,  5.2, 10, 7,  178, 20, 103, 34, 86,  12, 27.95, 33,  250, 29,  1100, 1060}},
//        {7400, {111.8, 490, 26, 7.4, 49,  36,  5.5, 11, 7,  183, 21, 106, 35, 88,  12, 29.41, 35,  250, 31,  1200, 1160}},
//        {7600, {115.0, 517, 32, 6.4, 51,  40,  5.8, 12, 7,  189, 22, 109, 36, 90,  12, 31.05, 37,  250, 32,  1300, 1270}},
//        {7800, {118.2, 549, 41, 5.3, 54,  44,  6.1, 13, 8,  195, 23, 112, 37, 92,  12, 32.60, 39,  250, 34,  1400, 1410}},
//        {8000, {121.4, 586, 56, 4.5, 57,  49,  6.4, 14, 8,  201, 24, 114, 38, 94,  13, 35.16, 41,  250, 36,  1600, 1570}},
//        {8200, {124.6, 637, 0,  0,   60,  60,  7.0, 16, 9,  207, 25, 116, 39, 97,  13, 38.20, 45,  250, 38,  1800, 1800}},
//        {8300, {126.3, 717, 0,  0,   64,  77,  7.8, 19, 10, 211, 27, 116, 40, 99,  12, 43.10, 50,  253, 42,  2100, 2180}}
//};
//
//std::unordered_map<int, std::vector<double>> map_3rd_mortar = {
//        {8200, {124.7, 827,  67, 3.9, 67, 99,  8.3, 24, 11, 210, 28, 111, 40, 99, 12, 49.63, 56, 258, 47, 2700, 2700}},
//        {8000, {121.7, 878,  46, 5.4, 68, 113, 8.5, 27, 12, 206, 27, 108, 39, 97, 12, 52.70, 59, 259, 49, 2900, 2930}},
//        {7800, {118.7, 915,  37, 6.5, 68, 125, 8.5, 30, 12, 202, 27, 105, 38, 95, 11, 54.91, 61, 260, 50, 3100, 3100}},
//        {7600, {115.7, 946,  32, 7.4, 67, 135, 8.4, 32, 13, 199, 26, 102, 37, 93, 11, 56.75, 62, 262, 51, 3200, 3230}},
//        {7400, {112.7, 973,  29, 8.2, 66, 143, 8.4, 35, 13, 195, 26, 99,  36, 91, 11, 58.36, 64, 263, 52, 3300, 3340}},
//        {7200, {109.6, 997,  27, 8.9, 65, 149, 8.3, 37, 14, 192, 25, 97,  35, 88, 10, 59.83, 65, 264, 53, 3400, 3440}},
//        {7000, {106.5, 1020, 24, 9.6, 64, 153, 8.2, 40, 14, 190, 25, 95,  34, 86, 10, 61.18, 66, 264, 53, 3500, 3520}},
//        {6800, {103.5, 1040, 22, 10,  63, 156, 8.1, 43, 14, 187, 24, 92,  33, 83, 10, 62.43, 67, 265, 54, 3600, 3600}},
//        {6600, {100.5, 1060, 20, 11,  62, 159, 7.9, 45, 15, 184, 24, 90,  32, 81, 9,  63.60, 68, 265, 54, 3700, 3670}},
//        {6400, {97.6,  1078, 19, 11,  61, 162, 7.7, 48, 15, 180, 23, 87,  31, 78, 9,  64.70, 69, 266, 55, 3700, 3740}},
//        {6200, {94.6,  1096, 17, 12,  60, 165, 7.5, 50, 16, 177, 22, 84,  30, 76, 9,  65.75, 70, 266, 55, 3800, 3800}},
//        {6000, {91.7,  1113, 16, 12,  58, 168, 7.3, 53, 17, 174, 21, 81,  29, 73, 8,  66.76, 71, 267, 56, 3900, 3850}},
//        {5800, {88.7,  1129, 15, 12,  56, 172, 7.2, 56, 18, 171, 20, 78,  28, 71, 8,  67.75, 72, 267, 56, 3900, 3910}},
//        {5600, {85.6,  1145, 14, 13,  53, 163, 7.0, 59, 19, 168, 19, 75,  27, 68, 8,  68.71, 72, 267, 57, 4000, 3960}},
//        {5400, {82.5,  1161, 13, 13,  50, 163, 6.8, 63, 20, 165, 18, 72,  26, 66, 7,  69.66, 73, 268, 57, 4000, 4010}},
//};
//
//std::unordered_map<int, std::vector<double>> map_4th = {
//        {200,  {4,   15,  1,  16,  6.1, 0.1, 0.1, 0,  0, 0,   0,  0,  1,  4,   1,  0.93,  0.7, 273, 0.7, 0,    0.6}},
//        {400,  {8,   28,  1,  16,  6.3, 0.2, 0.3, 1,  0, 0,   0,  0,  2,  8,   2,  1.68,  1.5, 271, 1.5, 0,    2.6}},
//        {600,  {12,  41,  1,  16,  6.5, 0.3, 0.4, 1,  0, 1,   0,  0,  4,  12,  4,  2.45,  2.3, 268, 2.2, 0,    6.0}},
//        {800,  {16,  54,  2,  16,  6.8, 0.4, 0.6, 1,  1, 2,   0,  1,  5,  16,  5,  3.21,  3.1, 266, 3.0, 0,    11}},
//        {1000, {20,  67,  2,  15,  7.2, 0.5, 0.8, 2,  1, 4,   1,  3,  6,  19,  6,  4.00,  4.0, 263, 3.7, 0,    17}},
//        {1200, {24,  80,  2,  15,  7.7, 0.6, 1.0, 2,  1, 6,   1,  4,  7,  22,  6,  4.80,  4.8, 261, 4.5, 0,    25}},
//        {1400, {28,  94,  2,  15,  8.2, 0.8, 1.2, 2,  2, 8,   1,  5,  8,  26,  7,  5.28,  5.7, 259, 5.3, 0,    34}},
//        {1600, {32,  107, 2,  15,  8.7, 1.0, 1.4, 2,  2, 10,  1,  5,  9,  30,  8,  6.45,  6.6, 257, 6.1, 100,  45}},
//        {1800, {36,  121, 2,  14,  9.2, 1.2, 1.6, 2,  2, 13,  1,  6,  10, 34,  9,  7.28,  7.5, 254, 6.9, 100,  58}},
//        {2000, {40,  135, 3,  14,  9.8, 1.4, 1.8, 3,  2, 15,  2,  7,  11, 37,  10, 8.13,  8.4, 252, 7.7, 100,  72}},
//        {2200, {44,  150, 3,  13,  11,  1.7, 1.9, 3,  2, 18,  2,  8,  12, 40,  11, 9.00,  9.2, 250, 8.5, 100,  88}},
//        {2400, {48,  165, 3,  13,  12,  2.1, 2.1, 3,  2, 20,  2,  10, 13, 43,  12, 9.90,  10,  248, 9.2, 100,  107}},
//        {2600, {52,  180, 3,  13,  12,  2.5, 2.2, 3,  2, 23,  2,  11, 14, 46,  13, 10.81, 11,  246, 10,  100,  128}},
//        {2800, {56,  196, 4,  12,  13,  3.0, 2.4, 3,  3, 26,  3,  12, 15, 49,  13, 11.75, 13,  244, 11,  200,  151}},
//        {3000, {60,  212, 4,  12,  14,  3.5, 2.6, 4,  3, 29,  3,  14, 16, 52,  14, 12.71, 14,  242, 12,  200,  176}},
//        {3200, {64,  228, 4,  12,  15,  4.1, 2.7, 4,  3, 32,  3,  16, 17, 55,  15, 13.70, 15,  240, 12,  200,  204}},
//        {3400, {68,  245, 5,  11,  16,  4.8, 2.9, 4,  3, 35,  4,  17, 17, 58,  15, 14.71, 16,  239, 13,  200,  234}},
//        {3600, {72,  263, 5,  11,  17,  5.6, 3.0, 5,  3, 37,  4,  19, 18, 61,  16, 15.76, 17,  237, 14,  300,  267}},
//        {3800, {76,  281, 5,  11,  18,  6.4, 3.2, 5,  3, 40,  5,  20, 19, 64,  17, 16.85, 19,  236, 16,  300,  302}},
//        {4000, {80,  299, 6,  10,  20,  7.3, 3.3, 6,  4, 42,  6,  22, 20, 67,  17, 17.96, 20,  235, 17,  300,  340}},
//        {4200, {84,  319, 7,  9.7, 22,  8.3, 3.4, 6,  4, 45,  6,  23, 21, 70,  18, 19.13, 21,  234, 18,  400,  382}},
//        {4400, {88,  339, 7,  9.3, 24,  9.4, 3.6, 6,  4, 49,  7,  25, 22, 73,  18, 20.36, 23,  232, 19,  400,  429}},
//        {4600, {92,  361, 8,  8.9, 25,  11,  3.8, 7,  4, 53,  7,  26, 23, 76,  19, 21.65, 24,  231, 20,  500,  482}},
//        {4800, {96,  383, 9,  8.4, 26,  12,  3.9, 7,  4, 57,  8,  28, 24, 79,  20, 23.00, 26,  229, 21,  500,  541}},
//        {5000, {100, 407, 10, 7.3, 27,  14,  4.1, 8,  5, 61,  9,  30, 25, 82,  20, 24.43, 27,  228, 22,  600,  606}},
//        {5200, {104, 433, 12, 7.1, 28,  16,  4.3, 9,  5, 65,  10, 32, 25, 85,  20, 25.96, 29,  228, 24,  700,  679}},
//        {5400, {108, 461, 14, 6.4, 30,  19,  4.6, 10, 5, 70,  11, 34, 26, 88,  21, 27.65, 31,  227, 25,  800,  762}},
//        {5600, {112, 492, 17, 5.6, 32,  22,  4.9, 11, 6, 75,  12, 36, 27, 91,  21, 29.51, 33,  227, 26,  900,  888}},
//        {5800, {116, 527, 21, 4.7, 34,  25,  5.2, 12, 6, 80,  13, 38, 28, 94,  22, 31.95, 36,  226, 28,  1000, 969}},
//        {6000, {120, 569, 30, 3.5, 36,  28,  5.5, 13, 6, 86,  14, 40, 29, 97,  22, 34.11, 38,  226, 30,  1100, 1100}},
//        {6200, {124, 625, 0,  0,   38,  34,  6.0, 15, 7, 92,  14, 42, 30, 100, 23, 37.50, 42,  226, 32,  1300, 1290}},
//        {6300, {126, 708, 0,  0,   40,  44,  6.9, 18, 8, 98,  15, 43, 30, 101, 23, 42.50, 47,  228, 35,  1600, 1580}}
//};
//
//std::unordered_map<int, std::vector<double>> map_4th_mortar = {
//        {6200, {124,  841,  33, 3.4, 41, 59, 7.5, 24, 9,  104, 15, 41, 30, 99, 22, 50.48, 55, 231, 41, 2000, 2040}},
//        {6000, {120,  900,  23, 4.6, 41, 65, 7.7, 27, 9,  105, 15, 39, 29, 97, 22, 54.03, 58, 233, 43, 2200, 2240}},
//        {5800, {116,  944,  19, 5.6, 40, 70, 7.6, 30, 10, 104, 14, 38, 28, 94, 21, 56.61, 61, 234, 44, 2400, 2380}},
//        {5600, {112,  979,  16, 6.4, 40, 75, 7.5, 34, 10, 102, 14, 36, 27, 90, 20, 58.71, 63, 234, 45, 2500, 2490}},
//        {5400, {108,  1009, 14, 7.1, 40, 79, 7.4, 37, 11, 101, 14, 35, 26, 87, 19, 60.55, 64, 235, 46, 2600, 2580}},
//        {5200, {104,  1037, 12, 7.7, 39, 83, 7.3, 41, 12, 100, 13, 34, 25, 84, 19, 62.23, 66, 236, 47, 2700, 2660}},
//        {5000, {100,  1063, 11, 8.2, 37, 87, 7.2, 44, 13, 98,  13, 32, 24, 81, 18, 63.80, 67, 237, 47, 2700, 2730}},
//        {4800, {96,   1088, 10, 8.7, 36, 90, 7.0, 47, 13, 97,  12, 31, 23, 78, 17, 65.26, 68, 237, 48, 2800, 2800}},
//        {4600, {92,   1111, 9,  9.2, 34, 93, 6.8, 51, 13, 96,  12, 30, 22, 75, 16, 66.65, 70, 237, 48, 2900, 2860}},
//        {4400, {88,   1133, 8,  9.6, 33, 96, 6.5, 55, 14, 94,  11, 28, 22, 72, 16, 67.96, 71, 237, 49, 2900, 2910}},
//        {4200, {84,   1154, 0,  10,  31, 95, 6.2, 59, 15, 92,  10, 27, 21, 69, 16, 69.21, 72, 237, 49, 3000, 2960}},
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_full = {
//        {100,  {4700, 6510, 7920, 9050, 10030, 10880, 11630, 12280, 12840, 13320}},
//        {200,  {2950, 4290, 5370, 6230, 7000,  7700,  8300,  8870,  9390,  9860}},
//        {300,  {2280, 3300, 4190, 4940, 5590,  6170,  6690,  7180,  7640,  8050}},
//        {400,  {1960, 2790, 3510, 4160, 4750,  5260,  5720,  6050,  6540,  6920}},
//        {500,  {1800, 2500, 3100, 3650, 4160,  4640,  5080,  5460,  5810,  6150}},
//        {600,  {1720, 2300, 2820, 3320, 3770,  4190,  4590,  4950,  5290,  5590}},
//        {700,  {1670, 2180, 2640, 3090, 3480,  3870,  4220,  4560,  4880,  5180}},
//        {800,  {1680, 2120, 2530, 2930, 3290,  3620,  3960,  4260,  4560,  4840}},
//        {900,  {1690, 2080, 2460, 2800, 3140,  3450,  3740,  4030,  4300,  4560}},
//        {1000, {1720, 2060, 2400, 2730, 3040,  3320,  3590,  3850,  4120,  436}}
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_reduced = {
//        {100,  {3430, 4880, 6060, 7070, 7970, 8760, 9460, 9880, 10630, 11100}},
//        {200,  {2140, 3130, 3940, 4650, 5280, 5870, 6400, 6910, 7380,  7820}},
//        {300,  {1700, 2430, 3080, 3630, 4140, 4610, 5030, 5440, 5830,  6200}},
//        {400,  {1500, 2080, 2600, 3080, 3510, 3890, 4260, 4610, 4930,  5240}},
//        {500,  {1420, 1900, 2330, 2730, 3100, 3450, 3770, 4070, 4350,  4630}},
//        {600,  {1390, 1790, 2150, 2510, 2840, 3140, 3430, 3700, 3950,  4200}},
//        {700,  {1390, 1740, 2050, 2370, 2650, 2930, 3180, 3430, 3670,  3880}},
//        {800,  {1420, 1720, 2000, 2280, 2530, 2770, 3020, 3230, 3450,  3650}},
//        {900,  {1460, 1720, 1980, 2220, 2450, 2670, 2880, 3090, 3280,  3470}},
//        {1000, {1500, 1740, 1960, 2190, 2400, 2600, 2790, 2980, 3170,  334}}
//
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_1st = {
//        {100,  {2770, 4060, 5120, 6060, 6910, 7660, 8330, 8920, 9440, 9890}},
//        {200,  {1730, 2540, 3240, 3870, 4440, 4960, 5450, 5920, 6360, 6780}},
//        {300,  {1400, 1980, 2520, 2980, 3430, 3850, 4240, 4600, 4940, 5270}},
//        {400,  {1270, 1720, 2150, 2530, 2880, 3230, 3550, 3850, 4160, 4440}},
//        {500,  {1230, 1590, 1940, 2270, 2570, 2860, 3130, 3400, 3650, 3890}},
//        {600,  {1230, 1530, 1820, 2110, 2370, 2620, 2850, 3080, 3300, 3520}},
//        {700,  {1250, 1520, 1760, 2010, 2240, 2470, 2670, 2880, 3070, 3270}},
//        {800,  {1280, 1520, 1730, 1950, 2160, 2360, 2540, 2730, 2900, 3070}},
//        {900,  {1350, 1550, 1740, 1930, 2120, 2300, 2470, 2630, 2790, 2940}},
//        {1000, {1400, 1580, 1750, 1920, 2090, 2250, 2410, 2560, 2700, 2840}}
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_2nd = {
//        {100,  {2180, 3270, 4240, 5090, 5870, 6580, 7200, 7750, 8230, 8650}},
//        {200,  {1390, 2030, 2600, 3140, 3640, 4120, 4570, 4990, 5400, 5780}},
//        {300,  {1150, 1600, 2020, 2400, 2780, 3130, 3470, 3790, 4110, 4420}},
//        {400,  {1070, 1420, 1740, 2050, 2340, 2620, 2900, 3160, 3420, 3660}},
//        {500,  {1060, 1340, 1610, 1860, 2100, 2340, 2560, 2790, 3000, 3200}},
//        {600,  {1090, 1320, 1540, 1760, 1960, 2160, 2350, 2540, 2730, 2910}},
//        {700,  {1130, 1330, 1520, 1710, 1880, 2060, 2220, 2390, 2550, 2710}},
//        {800,  {1190, 1360, 1530, 1690, 1850, 2000, 2150, 2290, 2440, 2580}},
//        {900,  {1260, 1410, 1560, 1700, 1840, 1980, 2110, 2440, 2360, 2490}},
//        {1000, {1330, 1470, 1600, 1720, 1850, 1970, 2090, 2210, 2320, 2440}}
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_3rd = {
//        {100,  {1660, 2580, 3400, 4170, 4850, 5460, 6000, 6480, 6880, 7220}},
//        {200,  {1060, 1550, 2030, 2480, 2910, 3320, 3720, 4090, 4450, 4780}},
//        {300,  {930,  1260, 1580, 1900, 2200, 2500, 2790, 3070, 3340, 3610}},
//        {400,  {900,  1160, 1400, 1640, 1870, 2110, 2340, 2560, 2780, 2990}},
//        {500,  {920,  1130, 1320, 1520, 1700, 1900, 2080, 2260, 2440, 2620}},
//        {600,  {970,  1140, 1310, 1470, 1630, 1790, 1940, 2100, 2250, 2400}},
//        {700,  {1040, 1190, 1320, 1470, 1600, 1740, 1870, 2000, 2130, 2270}},
//        {800,  {1100, 1230, 1350, 1480, 1590, 1720, 1830, 1950, 2060, 2180}},
//        {900,  {1190, 1300, 1410, 1520, 1620, 1730, 1830, 1930, 2040, 2140}},
//        {1000, {1270, 1370, 1470, 1560, 1650, 1750, 1850, 1940, 2030, 2120}}
//};
//
//std::unordered_map<int, std::vector<int>> map_dist_4th = {
//        {100,  {1250, 1940, 2570, 3140, 3670, 4140, 4550, 4910, 5230, 5490}},
//        {200,  {850,  1210, 1560, 1890, 2220, 2530, 2830, 3110, 3380, 3640}},
//        {300,  {780,  1020, 1260, 1490, 1720, 1940, 2160, 2370, 2570, 2770}},
//        {400,  {790,  970,  1150, 1330, 1500, 1670, 1840, 2010, 2170, 2330}},
//        {500,  {840,  980,  1130, 1270, 1410, 1550, 1680, 1820, 1950, 2080}},
//        {600,  {900,  1020, 1140, 1260, 1380, 1490, 1600, 1720, 1830, 1950}},
//        {700,  {970,  1080, 1180, 1280, 1380, 1480, 1580, 1680, 1770, 1870}},
//        {800,  {1050, 1150, 1230, 1320, 1410, 1500, 1580, 1670, 1750, 1840}},
//        {900,  {1150, 1220, 1300, 1380, 1460, 1530, 1610, 1680, 1760, 1840}},
//        {1000, {1230, 1300, 1370, 1440, 1510, 1580, 1650, 1720, 1780, 1850}}
//};
//
///*
// * vector of hash tables for ballistic parameters
// * std::move() used for more efficient memory usage
// * indices:
// * 0 - full,    1 - full mortar-like,   2 - reduced,    3 - reduced mortar-like,    5 - 1st,    6 - 1st mortar-like
// * 7 - 2nd,     8 - 2nd mortar-like,    9 - 3rd,        10 - 3rd mortar-like,       11 - 4th,   12 - 4th mortar-like
// */
//const std::vector<std::unordered_map<int, std::vector<double>>> ballistic_tables_map = {
//        std::move(map_full),
//        std::move(map_full_mortar),
//        std::move(map_reduced),
//        std::move(map_reduced_mortar),
//        std::move(map_1st),
//        std::move(map_1st_mortar),
//        std::move(map_2nd),
//        std::move(map_2nd_mortar),
//        std::move(map_3rd),
//        std::move(map_3rd_mortar),
//        std::move(map_4th),
//        std::move(map_4th_mortar)
//};
//
//const std::vector<std::unordered_map<int, std::vector<int>>> min_dist_tables_map = {
//        std::move(map_dist_full),
//        std::move(map_dist_reduced),
//        std::move(map_dist_1st),
//        std::move(map_dist_2nd),
//        std::move(map_dist_3rd),
//        std::move(map_dist_4th),
//};
//
//
///**
// * @brief returns load type associated with the index
// * @param mode - defines the indexation: 0 - ballistic table indexation, 1 - minimal distance table indexation
// */
//std::string getLoadType(int i, bool mode) {
//    if (!mode) {
//        switch (i) {
//            case 0:
//                return "full";
//            case 1:
//                return "full_mortar";
//            case 2:
//                return "reduced";
//            case 3:
//                return "reduced_mortar";
//            case 4:
//                return "1st";
//            case 5:
//                return "1st_mortar";
//            case 6:
//                return "2nd";
//            case 7:
//                return "2nd_mortar";
//            case 8:
//                return "3rd";
//            case 9:
//                return "3rd_mortar";
//            case 10:
//                return "4th";
//            case 11:
//                return "4th_mortar";
//            default:
//                return "";
//        }
//    } else {
//        switch (i) {
//            case 0:
//                return "full";
//            case 1:
//                return "reduced";
//            case 2:
//                return "1st";
//            case 3:
//                return "2nd";
//            case 4:
//                return "3rd";
//            case 5:
//                return "4th";
//            default:
//                return "";
//        }
//    }
//}
//
//const std::vector<std::string> param_entries_rus = {
//        "Дальность (м)",
//        "Прицел (дел)",
//        "Прицел (тыс)",
//        "Узкая вилка (тыс)",
//        "Изменение дальности при изменении прицела на 1 тыс (м)",
//        "Срединное отклонение по дальности (м)",
//        "Срединное отклонение по высоте (м)",
//        "Срединное отклонение боковое (м)",
//        "Поправка направления на деривацию (тыс)",
//        "Поправка направления на боковой ветер скоростью 10 м/с (тыс)",
//        "Поправка дальности на продольный ветер скоростью 10 м/с (м)",
//        "Поправка дальности на изменение давления воздуха на 10 мм (м)",
//        "Поправка дальности на изменение температуры воздуха на 10 гр. Ц. (м)",
//        "Поправка дальности на изменение температуры заряда на 10 гр. Ц. (м)",
//        "Поправка дальности на изменение начальной скорости 1% (м)",
//        "Поправка дальности на изменение массы снаряда на 1 знак (м)",
//        "Угол прицеливания (градусы, минуты)",
//        "Угол падения (градусы)",
//        "Окончательная скорость (м/с)",
//        "Время полета (с)",
//        "Высота входа в \"Метеосредний\" (м)",
//        "Высота траектории (м)"
//};
//
//const std::vector<std::string> param_entries_rus_short = {
//        "П_д", "П_т", "В", "ΔX_тыс", "В_д", "В_в", "В_б", "Z", "ΔZ_W", "ΔX_W", "ΔX_H",
//        "ΔX_Т", "ΔX_Тз", "ΔX_v0", "ΔX_q", "α", " θ_c", "v_с", "t_c", "Y_б", "Y_s"
//};
//
//const std::vector<std::string> param_entries_eng = {
//        "Distance (m)",
//        "Aim (div)",
//        "Aim (mil)",
//        "Narrow Fork (mil)",
//        "Distance Change for 1 mil of Aim Change (m)",
//        "Distance Median Deviation (m)",
//        "Height Median Deviation (m)",
//        "Lateral Median Deviation (m)",
//        "Direction Correction for Derivation",
//        "Direction Correction for 10 m/s Lateral Wind (mil)",
//        "Distance Correction for 10 m/s Longitudinal Wind (m)",
//        "Distance Correction for 10 mm Pressure Change (m)",
//        "Distance Correction for 10 deg. C Air Temperature Change (m)",
//        "Distance Correction for 10 deg. C Load Temperature Change (m)",
//        "Distance Correction for 1% Initial Velocity Change (m)",
//        "Distance Correction for 1 Sign Projectile Mass Change",
//        "Aiming Angle (deg min)",
//        "Impact Angle (deg)",
//        "Impact Velocity (m/s)",
//        "Flight Time (s)",
//        "Input Height for Meteorological Bulletin (m)",
//        "Trajectory Height (m)"
//};
//
//const std::vector<std::string> param_entries_eng_short = {
//        "Distance", "Aim_div", "Aim_mil", "V", "Delta_X_mil", "Dev_Dist", "Dev_H", "Dev_Lat", "Dir_Corr_Deriv",
//        "Dir_Corr_Lat_Wind", "Dir_Corr_Long_Wind", "Dist_Corr_P", "Dist_Corr_Air_T", "Dist_Corr_Proj_T",
//        "Dist_Corr_V", "Dist_Corr_M", "Aim_deg", "Imp_deg", "Imp_V", "Time", "Meteo_H", "Traj_H"
//};

